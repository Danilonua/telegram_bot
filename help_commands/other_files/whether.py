import aiohttp
from aiogram import types, Dispatcher
from googletrans import Translator

API_KEY = 'ab66bedf8a0b13f2850b0c813d2220b6'


async def whether(message: types.Message):
    translator = Translator()
    city = message.text.strip().split()[1]
    detected_weather_lang = translator.detect(city).lang
    if detected_weather_lang != 'en':
        city_for_url = translator.translate(city, dest='en').text
    else:
        city_for_url = city
    weather_url = f'http://api.openweathermap.org/data/2.5/weather?q={city_for_url}&appid={API_KEY}&units=metric'

    async with aiohttp.ClientSession() as session:
        async with session.get(weather_url) as response:
            response = await response.json()
    if response.get('cod') == 200:
        weather = response['weather'][0]['description']
        temperature = response['main']['temp']
        feels_like = response['main']['feels_like']
        humidity = response['main']['humidity']

        weather = translator.translate(weather, dest='ru').text
        reply = f'–ü–æ–≥–æ–¥–∞ –≤  {city}:\n'
        reply += f'- –ü–æ–≥–æ–¥–∞: {weather}\n'
        reply += f'- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n'
        reply += f'- –ß—É—Å—Ç–≤—É–µ—Ç—Å—è: {feels_like}¬∞C\n'
        reply += f'- –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n\n'

        await message.answer(text=reply)
    else:
        await message.answer(text='–ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µüè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø')


def register_handlers_whether_command(dp: Dispatcher):
    dp.register_message_handler(whether, commands='weather')
